diff --git a/node_modules/instantsearch.js/es/lib/InstantSearch.js b/node_modules/instantsearch.js/es/lib/InstantSearch.js
index 6e7c7ee..469c7af 100644
--- a/node_modules/instantsearch.js/es/lib/InstantSearch.js
+++ b/node_modules/instantsearch.js/es/lib/InstantSearch.js
@@ -88,7 +88,9 @@ function (_EventEmitter) {
     _defineProperty(_assertThisInitialized(_this), "middleware", []);

     _defineProperty(_assertThisInitialized(_this), "scheduleSearch", defer(function () {
-      _this.mainHelper.search();
+      if (_this.started) {
+        _this.mainHelper.search();
+      }
     }));

     _defineProperty(_assertThisInitialized(_this), "scheduleRender", defer(function () {
diff --git a/node_modules/instantsearch.js/es/widgets/index/index.js b/node_modules/instantsearch.js/es/widgets/index/index.js
index 677d6ba..4a7a0d5 100644
--- a/node_modules/instantsearch.js/es/widgets/index/index.js
+++ b/node_modules/instantsearch.js/es/widgets/index/index.js
@@ -34,7 +34,7 @@ function isIndexWidget(widget) {
   return widget.$$type === 'ais.index';
 }

-function getLocalWidgetsState(widgets, widgetStateOptions) {
+function getLocalWidgetsState(widgets, widgetStateOptions, initialUiState) {
   return widgets.filter(function (widget) {
     return !isIndexWidget(widget);
   }).reduce(function (uiState, widget) {
@@ -43,7 +43,7 @@ function getLocalWidgetsState(widgets, widgetStateOptions) {
     }

     return widget.getWidgetState(uiState, widgetStateOptions);
-  }, {});
+  }, initialUiState);
 }

 function getLocalWidgetsSearchParameters(widgets, widgetSearchParametersOptions) {
@@ -156,12 +156,19 @@ var index = function index(props) {
           uiState: localUiState,
           initialSearchParameters: helper.state
         }));
+
+        // when you add a widget, the local ui state needs to be updated
+        localUiState = getLocalWidgetsState(localWidgets, {
+          searchParameters: helper.state,
+          helper: helper
+        }, localUiState);
+
         widgets.forEach(function (widget) {
           if (localInstantSearchInstance && widget.init) {
             widget.init({
               helper: helper,
               parent: _this,
-              uiState: {},
+              uiState: localInstantSearchInstance._initialUiState,
               instantSearchInstance: localInstantSearchInstance,
               state: helper.state,
               templatesConfig: localInstantSearchInstance.templatesConfig,
@@ -444,6 +451,11 @@ var index = function index(props) {

       helper.on('change', function (_ref15) {
         var state = _ref15.state;
+
+        if (instantSearchInstance.__isServerRendering && !instantSearchInstance.started) {
+          return;
+        }
+
         localUiState = getLocalWidgetsState(localWidgets, {
           searchParameters: state,
           helper: helper
@@ -501,6 +513,7 @@ var index = function index(props) {
       derivedHelper = null;
     },
     getWidgetState: function getWidgetState(uiState) {
+      console.log('hi', localUiState)
       return localWidgets.filter(isIndexWidget).reduce(function (previousUiState, innerIndex) {
         return innerIndex.getWidgetState(previousUiState);
       }, _objectSpread({}, uiState, _defineProperty({}, this.getIndexId(), localUiState)));
