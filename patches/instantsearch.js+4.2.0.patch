diff --git a/node_modules/instantsearch.js/es/lib/InstantSearch.js b/node_modules/instantsearch.js/es/lib/InstantSearch.js
index 6e7c7ee..469c7af 100644
--- a/node_modules/instantsearch.js/es/lib/InstantSearch.js
+++ b/node_modules/instantsearch.js/es/lib/InstantSearch.js
@@ -88,7 +88,9 @@ function (_EventEmitter) {
     _defineProperty(_assertThisInitialized(_this), "middleware", []);

     _defineProperty(_assertThisInitialized(_this), "scheduleSearch", defer(function () {
-      _this.mainHelper.search();
+      if (_this.started) {
+        _this.mainHelper.search();
+      }
     }));

     _defineProperty(_assertThisInitialized(_this), "scheduleRender", defer(function () {
diff --git a/node_modules/instantsearch.js/es/widgets/index/index.js b/node_modules/instantsearch.js/es/widgets/index/index.js
index 677d6ba..5bfd193 100644
--- a/node_modules/instantsearch.js/es/widgets/index/index.js
+++ b/node_modules/instantsearch.js/es/widgets/index/index.js
@@ -34,7 +34,9 @@ function isIndexWidget(widget) {
   return widget.$$type === 'ais.index';
 }

-function getLocalWidgetsState(widgets, widgetStateOptions) {
+function getLocalWidgetsState(widgets, widgetStateOptions, _initialUiState) {
+  var initialUiState = _initialUiState || {};
+
   return widgets.filter(function (widget) {
     return !isIndexWidget(widget);
   }).reduce(function (uiState, widget) {
@@ -43,7 +45,7 @@ function getLocalWidgetsState(widgets, widgetStateOptions) {
     }

     return widget.getWidgetState(uiState, widgetStateOptions);
-  }, {});
+  }, initialUiState);
 }

 function getLocalWidgetsSearchParameters(widgets, widgetSearchParametersOptions) {
@@ -69,9 +71,15 @@ function resetPageFromWidgets(widgets) {
   }

   indexWidgets.forEach(function (widget) {
-    var widgetHelper = widget.getHelper(); // @ts-ignore @TODO: remove "ts-ignore" once `resetPage()` is typed in the helper
+    var widgetHelper = widget.getHelper();
+
+    // @ts-ignore remove once resetPage is a helper method
+    widgetHelper._change({
+      // @ts-ignore @TODO: remove "ts-ignore" once `resetPage()` is typed in the helper
+      state: widgetHelper.state.resetPage(),
+      isPageReset: true,
+    });

-    widgetHelper.setState(widgetHelper.state.resetPage());
     resetPageFromWidgets(widget.getWidgets());
   });
 }
@@ -156,12 +164,13 @@ var index = function index(props) {
           uiState: localUiState,
           initialSearchParameters: helper.state
         }));
+
         widgets.forEach(function (widget) {
           if (localInstantSearchInstance && widget.init) {
             widget.init({
               helper: helper,
               parent: _this,
-              uiState: {},
+              uiState: localInstantSearchInstance._initialUiState,
               instantSearchInstance: localInstantSearchInstance,
               state: helper.state,
               templatesConfig: localInstantSearchInstance.templatesConfig,
@@ -444,10 +453,16 @@ var index = function index(props) {

       helper.on('change', function (_ref15) {
         var state = _ref15.state;
+        var isPageReset = _ref15.isPageReset;
+
+        if (isPageReset) {
+          localUiState.page = undefined;
+        }
+
         localUiState = getLocalWidgetsState(localWidgets, {
           searchParameters: state,
           helper: helper
-        });
+        }, localUiState);
         instantSearchInstance.onStateChange();
       });
     },
